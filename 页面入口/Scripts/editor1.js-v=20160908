var nowPage = 1;
var maxItem = 20;
var maxIndex = 0;
var SelectedItems = $([]),
	offset = {
	    top: 0,
	    left: 0
	};
var arVersion = navigator.appVersion.split("MSIE");
var version = parseFloat(arVersion[1]);

var sysLogoPage = 1;
var myLogoPage = 1;
var sysBgPage = 1;
var uploader;
$(function () {
    window.onbeforeunload = function () {
        return '您确定要离开吗？';
    };
    document.oncontextmenu = function () { return false; };

    SelectPage(1);
    var editorHeight = parseInt($(".editor-workspace").height());
    var pageHeight = parseInt($("#l-page-1").css("height"));
    var marginTop = (editorHeight - pageHeight) / 2;
    $(".pagec").css("margin-top", marginTop);
    EventBind();
    LoadTemplate();
    GetBgList(sysBgPage);
    GetLogoList(sysLogoPage);
    GetMyLogoList(0, myLogoPage);
    var arr = document.getElementsByTagName("input");
    for (var i = 0; i < arr.length; i++) {
        var obj = arr[i];
        var type = obj.getAttribute("type");
        if (type == "text") {
            if (obj.id == "rgbValue") continue;
            if (document.all) {
                obj.onkeyup = SetCmykToRgb;
            }
            else {
                obj.addEventListener('input', SetCmykToRgb, false)
            }
        }
    }
    $(".editor-image .content").tabs();
    $(".editor-header .tab li").click(function () {
        var id = $(this).attr("id");
        $(".editor-header .tab li").removeClass("active");
        $(this).addClass("active");
        $(".editor-left").hide();
        $(".content-" + id.split('-')[1]).show();
    });

    uploader = new plupload.Uploader({
        runtimes: 'html5,flash,silverlight,html4',
        browse_button: 'pickfiles',
        url: '/UploadMaterial.aspx',
        flash_swf_url: '/Scripts/pupload/Moxie.swf',
        silverlight_xap_url: '/Scripts/pupload/Moxie.xap',
        filters: {
            max_file_size: '10mb',
            mime_types: [
                { title: "Image files", extensions: "jpg,png" }
            ]
        },
        multipart_params: { ProductId: $("#hideTypeId").val(), SizeId: $("#hideSizeId").val(), Action: 'Logo' },
        init: {
            PostInit: function () {
                return false;
            },
            FilesAdded: function (up, files) {
                if (CheckLoginStatus() == 1)
                {
                    uploader.start();
                } else {
                    ShowLoginBox('uploader.start()');
                }
            },
            UploadProgress: function (up, file) {
                $("#upload_mask").show();
                $("#upload_font").text("上传中...");
                $("#upload_progress").css("width", file.percent + "%");
            },
            UploadComplete: function (up, files) {
                $("#upload_mask").hide();
                $("#upload_font").text("上传");
                $("#upload_progress").css("width", "0%");
                GetMyLogoList(0,myLogoPage);
            },
            Error: function (up, err) {
            }
        }
    });
    uploader.init();
});

function Document() {
    this.Pages = ([]);
    this.Name = "测试模板";
    this.TypeId = 3;
    this.SizeId = 1;
    this.GroupId = 1;
    this.FilePath = "";
    this.IsRound = false;
    this.PreviewId = 0;
    this.DocumentNumber = 0;
    this.TemplateNumber = 0;
}

function DocumentPage() {
    this.Background = "";
    this.Texts = ([]);
    this.Images = ([]);
    this.Number = 0;
    this.DocumentNumber = 0;
    this.Thumb = "";
    this.PDF = "";
}

function TextItem() {
    this.Text = "";
    this.CMYKColor = "";
    this.RGBColor = "";
    this.MultiLine = false;
    this.FontName = "";
    this.FontSize = 0;
    this.Fontstyle = "normal";
    this.Fontweight = "normal";
    this.Left = 0;
    this.Top = 0;
    this.ZIndex = 0;
    this.TextTag = 0;
    this.WordSpace = "0";
    this.Width = 400;
    this.Height = 243;
    this.Textdirection = "0";
    this.HAlignType = "";
    this.HAlignValue = "";
    this.VAlignType = "";
    this.VAlignValue = "";
}

function ImageItem() {
    this.Width = 0;
    this.Height = 0;
    this.Left = 0;
    this.Top = 0;
    this.ImageUrl = "";
    this.Percent = 100;
    this.Imagetype = "1";
    this.ZIndex = 10;
    this.HAlignType = "";
    this.HAlignValue = "";
    this.VAlignType = "";
    this.VAlignValue = "";
}

function EventBind() {
    UnBindEvent();
    ReEventBind();
}

function UnBindEvent() {
    $(".preimg").draggable();
    $(".preimg").draggable("destroy");
}

function ReEventBind() {
    $(".pagebox").on("click", function () {
        $(".editor-set-component").removeClass("active");
    });
    $(".pageContent").selectable();
    $(".pageContent").on("selectablestart", function (event, ui) {
        SelectedItems = $([]);
        $(".preimg").removeClass("ui-selected");
    });
    $(".pageContent").on("selectableselected", function (event, ui) {
        SelectedItems.push($(ui.selected));
    });
    $(".pageContent").on("selectablestop", function (event, ui) {
        /*如果选择的元素为单个元素，则显示对应的操作工具
        如果选择的元素为多个元素，则根据元素的个数与类型决定要显示哪些工具栏
        */
        var textMode = false, imageMode = false;
        $.each(SelectedItems, function (n, v) {
            if ($(this).hasClass("txt")) {
                textMode = true;
            }
            if ($(this).hasClass("img")) {
                imageMode = true;
            }
        });
        if (SelectedItems.length > 1) {
            if (textMode && imageMode) {
                /*显示对齐设置，隐藏字体设置、图片设置、坐标设置、分布设置*/
            } else if (textMode) {
                /*显示字体设置，对齐设置，隐藏图片设置、坐标设置、分布设置*/
            } else {
                /*显示对齐设置，隐藏字体设置、图片设置、坐标设置、分布设置*/
            }
        }
        if (SelectedItems.length > 2) {
            if (textMode && imageMode) {
                /*显示对齐设置、分布设置，隐藏字体设置、图片设置、坐标设置、分布设置*/
            } else if (textMode) {
                /*显示字体设置、对齐设置、分布设置，隐藏图片设置、坐标设置、分布设置*/
            } else {
                /*显示对齐设置、分布设置，隐藏字体设置、图片设置、坐标设置、分布设置*/
            }
        }
    });

    var TimeFn = null;
    $(".preimg").click(function (e) {
        clearTimeout(TimeFn);
        TimeFn = setTimeout("", 300);
        if (e.metaKey == false) {
            $(".editor-set-component").addClass("active");
            $(".preimg").removeClass("ui-selected");
            $(this).addClass("ui-selected");
            SelectedItems = $([]);
            SelectedItems.push($(this));
            SetItemAttribute(this);
            e.stopPropagation();//阻止事件向上冒泡
        }
    });

    $(".preimg").draggable({
        containment: "parent"
    });
    $(".preimg").on("dragstart", function (event, ui) {
        if ($(this).hasClass("ui-selected")) {
            SelectedItems = $(".ui-selected").each(function () {
                var el = $(this);
                el.data("offset", el.offset());
            });
        } else {
            SelectedItems = $([]);
            $(".pageContent .preimg").removeClass("ui-selected");
        }
        offset = $(this).offset();
    });
    $(".preimg").on("drag", function (event, ui) {
        DragItem(this,event, ui);
    });
    $(".preimg").on("dragstop", function (event, ui) {
        DragItem(this,event, ui);
    });

    $(document).keydown(function (event) {
        MoveSelectItems(event);
    });

    $("#sys-logo-list").mCustomScrollbar({
        keyboard: { enable: false },
        callbacks: {
            onTotalScroll: function () {
                sysLogoPage++;
                GetLogoList(sysLogoPage);
            }
        }
    });
    $(".my-logo-list").mCustomScrollbar({
        keyboard: { enable: false },
        callbacks: {
            onTotalScroll: function () {
                myLogoPage++;
                  GetMyLogoList(myLogoPage);
            }
        }
    });
    $("#bg-logo-list").mCustomScrollbar({
        keyboard: { enable: false },
        callbacks: {
            onTotalScroll: function () {
                sysBgPage++;
                GetBgList(sysBgPage);
            }
        }
    });
    $(".editor-drop-down-list .scroll").mCustomScrollbar({
        keyboard: { enable: false }
    });
    $(".editor-page .content").mCustomScrollbar({
        keyboard: { enable: false }
    });
    $("#fontlist li").click(function () {
        $("#fontlist li").removeClass("active");
        $(this).addClass("active");
        var fontfamily = $(this).attr("data");
        $("#fontlist").hide();
        $("#textfamily").val(fontfamily).css("font-family", fontfamily);
        $.each(SelectedItems, function (n, obj) {
            $(obj).attr("fn", fontfamily);
            Text2Image(obj);
        });
    });
    $("#sizelist li").click(function () {
        $("#sizelist li").removeClass("active");
        $(this).addClass("active");
        var fontsize = $(this).attr("data");
        $("#sizelist").hide();
        $("#textsize").val(fontsize + "px");
        $.each(SelectedItems, function (n, obj) {
            $(obj).attr("fz", fontsize);
            Text2Image(obj);
        });
    });
    $("#textvalue").keyup(function () {
        $.each(SelectedItems, function (n, obj) {
            $(obj).attr("text", $("#textvalue").val());
            Text2Image(obj);
        });
    });
    $("#item-x").keyup(function () {
        var x=$(this).val();
        $.each(SelectedItems, function (n, obj) {
            $(obj).css("left", x + "px").attr("x", x);
        });
    });
    $("#item-y").keyup(function () {
        var y = $(this).val();
        $.each(SelectedItems, function (n, obj) {
            $(obj).css("top", y + "px").attr("y", y);
        });
    });
    $("#item-w").keyup(function () {
        var w = $(this).val();
        $.each(SelectedItems, function (n, obj) {
            $(obj).css("width", w + "px").attr("w", w);
        });
    });
    $("#item-h").keyup(function () {
        var h = $(this).val();
        $.each(SelectedItems, function (n, obj) {
            $(obj).css("height", h + "px").attr("h", h);
        });
    });

    $(".slider").slider({
        min: 0,
        max: 300,
        value: 100,
        stop: function (event, ui) {
            ResizeImage(ui.value);
        },
        slide: function (event, ui) {
            ResizeImage(ui.value);
        }
    });
}

function GetLogoList(page) {
    $.ajax({
        url: "/Material/AjaxLogos",
        type: "POST",
        dataType: "json",
        data: { typeId: $("#hideTypeId").val(), sizeId: $("#hideSizeId").val(), pageIndex: page },
        timeout: 0,
        success: function (data) {
            var html = "";
            $.each(data, function (n, item) {
                html += '<li onclick="AddNewLogo(\'/Upload/Design/Logos/Originals/' + this.OriginalPath + '\')" class="ng-scope" style="animation: fade-scale 250ms 0ms backwards; background-image: url(/Upload/Design/Logos/Thumbs/' + this.ThumbPath + ');">'
                    + '</li>';
            });
            $("#sys-logo-list ul").append(html);
            $("#sys-logo-list").mCustomScrollbar("update");
        }
    });
}

function GetMyLogoList(type, page) {
    $.ajax({
        url: "/Material/AjaxUserLogos",
        type: "POST",
        dataType: "json",
        data: { typeId: $("#hideTypeId").val(), sizeId: $("#hideSizeId").val(), pageIndex: page },
        timeout: 0,
        success: function (data) {
            var html = "";
            $.each(data, function (n, item) {
                html += '<li id="li' + this.Id + '" class="ng-scope">'
                        + '<img src="/Upload/Design/Logos/Thumbs/' + this.ThumbPath + '"  style="animation: fade-scale 250ms 0ms backwards;" onclick="AddNewLogo(\'/Upload/Design/Logos/Originals/' + this.OriginalPath + '\')"/>'
                        + '<a class="delete icon item-delete ng-hide" data-id="' + this.Id + '" onclick="DeleteLogo(' + this.Id + ')"></a>'
                    + '</li>';
            });
            if (type == 0) {
                if (html.length == 0) {
                    html = "<div class=\"tip ng-binding\">暂无图片</div>";
                }
                $("#my-logo-list ul").html("");
                $("#my-logo-list ul").append(html);
            } else {
                $("#my-logo-list ul").append(html);
            }
            $("#my-logo-list").mCustomScrollbar("update");
        }
    });
}

function GetBgList(page) {
    $.ajax({
        url: "/Material/AjaxBackgrounds",
        type: "POST",
        dataType: "json",
        data: { typeId: $("#hideTypeId").val(), sizeId: $("#hideSizeId").val(), pageIndex: page },
        timeout: 0,
        success: function (data) {
            var html = "";
            $.each(data, function (n, item) {
                html += '<li onclick="SetBg(\'/Upload/Design/Backgrounds/Thumbs/' + this.OriginalPath + '\')" class="ng-scope" style="animation: fade-scale 250ms 0ms backwards; background-image: url(/Upload/Design/Backgrounds/Thumbs/' + this.ThumbPath + ');">'
                    + '</li>';
            });
            $("#sys-bg-list ul").append(html);
            $("#sys-bg-list").mCustomScrollbar("update");
        }
    });
}

function SetBg(url) {
    $("#l-page-" + nowPage + " .pageBackground").css("background", "url(" + url + ") no-repeat");
    $("#l-page-" + nowPage + " .pageBackground").find("input").val(url);
}

function DragItem(e,event, ui) {
    var dt = ui.position.top - offset.top,
        dl = ui.position.left - offset.left;
    var marginLeft = $("#hideMarginLeft").val();
    var marginRight = $("#hideMarginRight").val();
    var marginTop = $("#hideMarginTop").val();
    var marginBottom = $("#hideMarginBottom").val();
    if (SelectedItems.length > 0) {
        $.each(SelectedItems, function (n, v) {
            var el = $(v),
                off = el.data("offset");
            var docWidth = parseInt(el.parent().css("width"));
            var docHeight = parseInt(el.parent().css("height"));

            var x, y, w, h;
            w = el.get(0).offsetWidth;
            h = el.get(0).offsetHeight;

            if ((off.left + dl) <= marginLeft) {
                x = marginLeft;
            }
            else if ((off.left + dl + w) >= (docWidth - marginRight)) {
                x = (docWidth - marginRight) - w;
            } else {
                x = off.left + dl;
            }

            if ((off.top + dt) < marginTop) {
                y = marginTop;
            }
            else if ((off.top + dt + h) > (docHeight - marginBottom)) {
                y = (docHeight - marginBottom) - h;
            } else {
                y = off.top + dt;
            }
            el.css("top", y + "px").css("left", x + "px").attr("y", y).attr("x", x);
            SetItemAttribute(el);
        });
    } else {
        var el = $(e),
            off = $(e).data("offset");
        var docWidth = parseInt(el.parent().css("width"));
        var docHeight = parseInt(el.parent().css("height"));

        var x = parseInt(el.css("left"));
        var y = parseInt(el.css("top"));
        var w = el.get(0).offsetWidth;
        var h = el.get(0).offsetHeight;

        if (x <= marginLeft) {
            x = marginLeft;
        }
        else if (x + w > (docWidth - marginRight)) {
            x = (docWidth - marginRight) - w;
        } else {
            x = x;
        }

        if (y <= marginTop) {
            y = marginTop;
        }
        else if (y + h > (docHeight - marginBottom)) {
            y = (docHeight - marginBottom) - h;
        } else {
            y = y;
        }
        el.css("top", y + "px").css("left", x + "px").attr("y", y).attr("x", x);
        SetItemAttribute(el);
    }

}

function ShowLoading(text) {
    $(".editor-notify").html(text);
    $(".editor-notify").show();
    $("#eqi_mask").show();
}
function HideLoading() {
    $(".editor-notify").html("");
    $(".editor-notify").hide();
    $("#eqi_mask").hide();
}

function ShowFontFamilyList() {
    $("#fontlist").show();
}

function ShowFontSizeList() {
    $("#sizelist").show();
}

function MoveSelectItems(event) {
    if (event.which == 37 || event.which == 38 || event.which == 39 || event.which == 40) {
        var marginLeft = $("#hideMarginLeft").val();
        var marginRight = $("#hideMarginRight").val();
        var marginTop = $("#hideMarginTop").val();
        var marginBottom = $("#hideMarginBottom").val();

        var id = event.which;
        if (event && event.preventDefault)
            event.preventDefault();
        else
            window.event.returnValue = false;
        var maxWidth = parseInt($(".pageContent").css("width")) - marginRight;
        var maxHeight = parseInt($(".pageContent").css("height")) - marginBottom;
        switch (id) {
            case 37:
                $.each(SelectedItems, function (n, v) {
                    if (parseInt($(v).css("left")) <= marginLeft) {
                        $(v).css("left", marginLeft+"px");
                        $(v).attr("x", marginLeft);
                    } else {
                        $(v).css("left", parseInt($(v).css("left")) - 1);
                        $(v).attr("x", parseInt($(v).css("left")) - 1);
                    }
                    $("#item-x").val($(v).attr("x"));
                    $("#item-y").val($(v).attr("y"));
                });
                break;
            case 38:
                $.each(SelectedItems, function (n, v) {
                    if (parseInt($(v).css("top")) <= marginTop) {
                        $(v).css("top", marginTop + "px");
                        $(v).attr("y", marginTop);
                    } else {
                        $(v).css("top", parseInt($(v).css("top")) - 1);
                        $(v).attr("y", parseInt($(v).css("top")) - 1);
                    }
                    $("#item-x").val($(v).attr("x"));
                    $("#item-y").val($(v).attr("y"));
                });
                break;
            case 39:
                $.each(SelectedItems, function (n, v) {
                    if (parseInt($(v).css("left")) >= parseInt(maxWidth - $(v).get(0).offsetWidth)) {
                        $(v).css("left", parseInt(maxWidth - $(v).get(0).offsetWidth));
                        $(v).attr("x", parseInt(maxWidth - $(v).get(0).offsetWidth));
                    } else {
                        $(v).css("left", parseInt($(v).css("left")) + 1);
                        $(v).attr("x", parseInt($(v).css("left")) + 1);
                    }
                    $("#item-x").val($(v).attr("x"));
                    $("#item-y").val($(v).attr("y"));
                });
                break;
            case 40:
                $.each(SelectedItems, function (n, v) {
                    if (parseInt($(v).css("top")) >= parseInt(maxHeight - $(v).get(0).offsetHeight)) {
                        $(v).css("top", parseInt(maxHeight - $(v).get(0).offsetHeight));
                        $(v).attr("y", parseInt(maxHeight - $(v).get(0).offsetHeight));
                    } else {
                        $(v).css("top", parseInt($(v).css("top")) + 1);
                        $(v).attr("y", parseInt($(v).css("top")) + 1);
                    }
                    $("#item-x").val($(v).attr("x"));
                    $("#item-y").val($(v).attr("y"));
                });
                break;
        }
    }
}

function LoadTemplate() {
    $.each($(".txt"), function (n, obj) {
        Text2Image(obj);
    });
}

function SelectPage(page) {
    $(".page-thumb").removeClass("active");
    $("#page-title-" + page).addClass("active");
    $(".page-thumb .num").removeClass("active");
    $("#page-title-" + page + " .num").addClass("active");
    $(".pagec").hide();
    $("#l-page-" + page).show();
    nowPage = page;
    maxIndex = 0;
    maxItem = $("#l-page-" + page + " .preimg").length;
    $.each($("#l-page-" + page + " .pageContent img"), function (n, v) {
        if (parseInt($(v).css("z-index")) > maxIndex)
            maxIndex = parseInt($(v).css("z-index"));
    })
}

function DeleteItem(page, type, number) {
    $("#l-page-" + page + "-" + type + "-" + number).remove();
    maxItem = maxItem - 1;
}

function AddNewLogo(url) {
    var width, height;
    var percent = $("#hidePercent").val();
    var img = new Image();
    img.src = url;
    if (version < 11) {
        img.onreadystatechange = function () {
            width = img.width * percent;
            height = img.height * percent;
            maxItem++;
            maxIndex++;
            var imgitem = "<img src=\"" + url + "\" class=\"preimg img ui-draggable\" id=\"l-page-" + nowPage + "-image-" + maxItem + "\" style=\"left:20px; top: 20px;width: " + width + "px; height:" + height + "px; z-index:" + maxIndex + ";\" ow=\"" + img.width + "\" oh=\"" + img.height + "\" w=\"" + width + "\" h=\"" + height + "\" t=\"1\" ox=\"" + 20 + "\" oy=\"" + 20 + "\" x=\"" + 20 + "\" y=\"" + 20 + "\" z=\"" + maxIndex + "\" p=\"" + percent + "\" ht=\"self\" hv=\"left\" vt=\"self\" vv=\"top\" enable=\"1\">";
            $("#l-page-" + nowPage + " .pageContent").append(imgitem);
            maxItem = maxItem + 1;
            EventBind();
        }
    } else {
        img.onload = function () {
            if (img.complete == true) {
                width = img.width * percent;
                height = img.height * percent;
                maxItem++;
                maxIndex++;
                var imgitem = "<img src=\"" + url + "\" class=\"preimg img ui-draggable\" id=\"l-page-" + nowPage + "-image-" + maxItem + "\" style=\"left:20px; top: 20px;width: " + width + "px; height:" + height + "px; z-index:" + maxIndex + ";\" ow=\"" + img.width + "\" oh=\"" + img.height + "\" w=\"" + width + "\" h=\"" + height + "\" t=\"1\" ox=\"" + 20 + "\" oy=\"" + 20 + "\" x=\"" + 20 + "\" y=\"" + 20 + "\" z=\"" + maxIndex + "\" p=\"" + percent + "\" ht=\"self\" hv=\"left\" vt=\"self\" vv=\"top\" enable=\"1\">";
                $("#l-page-" + nowPage + " .pageContent").append(imgitem);
                maxItem = maxItem + 1;
                EventBind();
            }
        }
    }
    $(".editor-workspace").trigger("click").trigger("focus");
}

function DeleteLogo(id) {
    $.ajax({
        url: "/Material/Delete",
        type: "POST",
        dataType: "json",
        data: { id: id },
        timeout: 0,
        success: function (data) {
            if (data) {
                $("#li" + id).remove();
            }
        }
    });
}

function TransparentImg(page, number) {
    var path = $("#l-page-" + page + "-image-" + number).attr("src");
    $.ajax({
        type: "POST",
        url: "/TransparentImg.aspx",
        datatype: "json",
        data: "oldpath=" + encodeURIComponent(path),
        success: function (data) {
            var imgsrc = "/Upload/Design/Logos/Originals/" + data;
            var lObj = $("#l-page-" + page + "-image-" + number);
            $(lObj).attr("src", imgsrc);
        },
        error: function () {
            art.dialog.tips('保存失败！');
        }
    });
}

function ResizeImage(value) {
    $.each(SelectedItems, function (n, obj) {
        if ($(obj).hasClass("img")) {
            var oW = parseFloat($(obj).attr("ow"));
            var oH = parseFloat($(obj).attr("oh"));
            var nW = parseFloat(oW * value / 100);
            var nH = parseFloat(oH * value / 100);
            $(obj).attr("w", nW).attr("h", nH);
            $(obj).css("width", nW).css("height", nH);
            $("#item-w").val(nW);
            $("#item-h").val(nH);
        }
    });
}

function SaveTemplateData() {
    var document = new Document();
    document.Name = $("#hideTemplateName").val();

    document.Author = "";
    document.Addtime = "";
    document.TemplateNumber = $("#hideTemplateNumber").val();
    document.DocumentNumber = $("#hideDocumentNumber").val();

    document.PreviewId = $("#hidePreviewId").val();
    document.TypeId = $("#hideTypeId").val();
    document.SizeId = $("#hideSizeId").val();
    document.GroupId = 1;
    document.FilePath = "";

    if ($("#isround").prop("checked"))
        document.IsRound = true;
    else
        document.IsRound = false;

    $.each($(".pagec"), function (p, pageitem) {
        var page = new DocumentPage();
        var pageid = $(pageitem).attr("id").split('-')[2];
        page.Number = pageid;
        var back = $("#l-page-" + pageid).find(".pageBackground input").eq(0).val();
        page.Background = back.substring(back.lastIndexOf('/') - 6);
        $.each($(pageitem).find(".img"), function (i, imageItem) {
            if ($(imageItem).attr("enable") == "1") {
                var imageObj = new ImageItem();
                imageObj.Width = parseInt($(imageItem).attr("w"));
                imageObj.Height = parseInt($(imageItem).attr("h"));
                imageObj.Imagetype = $(imageItem).attr("t");
                imageObj.ImageUrl = $(imageItem).attr("src").substring($(imageItem).attr("src").lastIndexOf('/') - 6);
                imageObj.Left = parseInt($(imageItem).attr("x"));
                imageObj.Top = parseInt($(imageItem).attr("y"));
                imageObj.ZIndex = parseInt($(imageItem).attr("z"));
                imageObj.Percent = $(imageItem).attr("p");
                imageObj.HAlignType = $(imageItem).attr("ht");
                imageObj.HAlignValue = $(imageItem).attr("hv");
                imageObj.VAlignType = $(imageItem).attr("vt");
                imageObj.VAlignValue = $(imageItem).attr("vv");
                page.Images.push(imageObj);
            }
        });
        $.each($(pageitem).find(".txt"), function (t, textItem) {
            if ($(textItem).attr("enable") == "1") {
                    var textObj = new TextItem();
                    textObj.Text = $(textItem).attr("text");
                    textObj.Left = parseInt($(textItem).attr("x"));
                    textObj.Top = parseInt($(textItem).attr("y"));
                    textObj.Width = parseInt($(textItem).attr("w"));
                    textObj.Height = parseInt($(textItem).attr("h"));
                    textObj.RGBColor = $(textItem).attr("rc");
                    textObj.CMYKColor = $(textItem).attr("cc");
                    textObj.FontName = $(textItem).attr("fn");
                    textObj.FontSize = parseInt($(textItem).attr("fz"));

                    var textWeightStr = $(textItem).attr("fw");
                    var textWeightValue = 0;
                    if (textWeightStr.toLowerCase() == "bold" || textWeightStr == "1") {
                        textWeightValue = 1;
                    }
                    var textStyleStr = $(textItem).attr("fs");
                    var textStyleValue = 0;
                    if (textStyleStr.toLowerCase() == "italic" || textStyleStr == "1") {
                        textStyleValue = 1;
                    }
                    textObj.Fontweight = parseInt(textWeightValue);
                    textObj.Fontstyle = parseInt(textStyleValue);

                    textObj.WordSpace = $(textItem).attr("s");
                    textObj.MultiLine = false;
                    textObj.Textdirection = $(textItem).attr("td");
                    textObj.TextTag = $(textItem).attr("tt");
                    textObj.ZIndex = parseInt($(textItem).attr("z"));
                    textObj.HAlignType = $(textItem).attr("ht");
                    textObj.HAlignValue = $(textItem).attr("hv");
                    textObj.VAlignType = $(textItem).attr("vt");
                    textObj.VAlignValue = $(textItem).attr("vv");

                    if ($(textItem).attr("tt") == '1' || $(textItem).attr("tt") == '20' || $(textItem).attr("tt") == '19') {
                        document.Name = $(textItem).attr("text");
                    }
                    page.Texts.push(textObj);
                }
        });
        document.Pages.push(page);
    });
    return $.toJSON(document);
}

function SaveTemplate(isprint, action) {
    if (CheckLoginStatus() == 1) {
        var json = SaveTemplateData();
        ShowLoading("正在保存...");
        $.ajax({
            type: "POST",
            url: "/SaveTemplate.aspx",
            datatype: "json",
            data: { data: json, action: action },
            success: function (data) {
                if (data > 0) {
                    $("#hideDocumentNumber").val(data);
                    $("#hideMode").val("doc");
                    if (isprint == 1) {
                        PrintDocument(data);
                    } else if (isprint == 0) {
                        var htmlstr = "<div><div><span class='icon-succ02'></span><span style=' color: #7ABD54; font-size: 18px; font-family: \5FAE\8F6F\96C5\9ED1; font-weight: normal; margin-bottom: 15px; '>保存成功，您可以在“会员中心>>我的模板”查看！</span></div></div>";
                        art.dialog({
                            content: htmlstr,
                            fixed: true,
                            lock: true,
                            button: [
                                {
                                    name: '印刷制作',
                                    callback: function () {
                                        PrintDocument(data);
                                        return false;
                                    },
                                    focus: true
                                },
                                {
                                    name: '继续设计'
                                }
                            ]
                        });
                    } else {
                        $('#mydocumentlist').load('/Document/MyDocument/' + $("#hideTypeId").val());
                    }                   
                } else {
                    art.dialog.tips("保存失败，请重试！");
                }
                HideLoading();
            },
            error: function () {
                HideLoading();
                art.dialog.tips('保存失败！');
            }
        });
    } else {
        ShowLoginBox('SaveTemplate(' + isprint + ',"' + action + '")');
    }
}

function PrintDocument(id) {
    window.onbeforeunload = null;
    window.location = "/Print/Document/" + id;
}

function Text2Image(obj) {
    var textValue = $(obj).attr("text");
    var textFamily = $(obj).attr("fn");
    var textSize = parseInt($(obj).attr("fz"));
    var textColor = $(obj).attr("rc");
    var textBold = $(obj).attr("fw");
    var textItalic = $(obj).attr("fs");
    var textMultiline = $(obj).attr("m");
    var textSpace = $(obj).attr("s");

    var textHAlignType = $(obj).attr("ht");
    var textHAlignValue = $(obj).attr("hv");
    var textVAlignType = $(obj).attr("vt");
    var textVAlignValue = $(obj).attr("vv");

    var imgsrc = GetImg(textValue, textFamily, textSize, textColor, textBold, textItalic);
    var image = new Image();
    image.src = imgsrc;

    var pageWidth = parseInt($(".pagec").css("width"));
    var pageHeight = parseInt($(".pagec").css("htight"));

    var oX = parseInt($(obj).attr("x"));
    var oY = parseInt($(obj).attr("y"));
    var oWidth = parseInt($(obj).attr("w"));
    var oHeight = parseInt($(obj).attr("h"));

    var nX = oX;
    var nY = oY;
    var nWidth = oWidth;
    var nHeight = oHeight;

    if (version < 11) {
        //ie浏览器
        image.onreadystatechange = function () {
            if (image.readyState == "complete") {
                nWidth = image.width;
                nHeight = image.height;

                if (textHAlignType == "self") {
                    if (textHAlignValue == "left")//左对齐，文字往右走
                    {
                        nX = oX;
                        nY = oY;
                    }
                    else if (textHAlignValue == "center")//居中对齐，文字往两边走
                    {
                        nX = oX + oWidth / 2 - nWidth / 2;
                        nY = oY;
                    }
                    else//右对齐，文字往左走
                    {
                        nX = oX + oWidth - nWidth;
                        nY = oY;
                    }
                }
                else if (textHAlignType == "page") {
                    if (textHAlignValue == "left")//左对齐，文字往右走
                    {
                        nX = oX;
                        nY = oY;
                    }
                    else if (textHAlignValue == "center")//居中对齐，文字往两边走
                    {
                        nX = pageWidth / 2 - nWidth / 2;
                        nY = oY;
                    }
                    else//右对齐，文字往左走
                    {
                        nX = oX + oWidth - nWidth;
                        nY = oY;
                    }
                }
                $(obj).css('left', nX + 'px').css("top", nY + "px");
                $(obj).attr("x", nX).attr('y', nY).attr("w", nWidth).attr("h", nHeight);
            }
        }
    }
    else {
        //非ie浏览器
        image.onload = function () {
            if (image.complete == true) {
                nWidth = image.width;
                nHeight = image.height;

                if (textHAlignType == "self") {
                    if (textHAlignValue == "left")//左对齐，文字往右走
                    {
                        nX = oX;
                        nY = oY;
                    }
                    else if (textHAlignValue == "center")//居中对齐，文字往两边走
                    {
                        nX = oX + oWidth / 2 - nWidth / 2;
                        nY = oY;
                    }
                    else//右对齐，文字往左走
                    {
                        nX = oX + oWidth - nWidth;
                        nY = oY;
                    }
                }
                else if (textHAlignType == "page") {
                    if (textHAlignValue == "left")//左对齐，文字往右走
                    {
                        nX = oX;
                        nY = oY;
                    }
                    else if (textHAlignValue == "center")//居中对齐，文字往两边走
                    {
                        nX = pageWidth / 2 - nWidth / 2;
                        nY = oY;
                    }
                    else//右对齐，文字往左走
                    {
                        nX = oX + oWidth - nWidth;
                        nY = oY;
                    }
                }
                $(obj).css('left', nX + 'px').css("top", nY + "px");
                $(obj).attr("x", nX).attr('y', nY).attr("w", nWidth).attr("h", nHeight);
            }
        }
    }
    $(obj).attr("src", imgsrc);
}

function AddNewText() {
    maxItem++;
    maxIndex++;
    var imgsrc = GetImg("这里输入文字", "黑体", 14, "rgb(0, 0, 0)", "0", "0");
    var imgitem = "<img " +
		" src=\"" + imgsrc + "\" " +
		" id=\"l-page-" + nowPage + "-text-" + maxItem + "\"" +
        " text=\"这里输入文字\" x=\"10\" y=\"10\" w=\"182\" h=\"35\" rc=\"rgb(0, 0, 0)\" " +
		" cc=\"0-0-0-100\" s=\"0\" fn=\"黑体\" fz=\"14\" fw=\"0\" fs=\"0\"" +
		" m=\"False\" td=\"1\" tt=\"8\" z=\"" + maxIndex + "\" ht=\"0\" hv=\"0\" vt=\"0\" vv=\"0\" enable=\"1\"" +
		" class=\"preimg txt ui-draggable\"" +
		" style=\"left:10px;top:10px;z-index:" + maxIndex + ";\"" +
		" />";
    $("#l-page-" + nowPage + " .pageContent").append(imgitem);
    EventBind();
    maxItem = maxItem + 1;
}

function GetImg(textValue, textFamily, textSize, textColor, textBold, textItalic) {
    var imgsrc = "/GetText.aspx?Text=" + encodeURIComponent(textValue) + "&FontName=" + encodeURIComponent(textFamily) + "&FontSize=" + textSize + "&RGBColor=" + encodeURIComponent(textColor) + "&Fontweight=" + textBold + "&Fontstyle=" + textItalic;
    return imgsrc;
}

function SetItemAttribute(obj) {
    if ($(obj).hasClass("txt")) {
        var fontfamily = $(obj).attr("fn");
        var fontsize = $(obj).attr("fz");
        var text = $(obj).attr("text");
        var color = $(obj).attr("rc");
        var bold = $(obj).attr("fw");
        var italic = $(obj).attr("fs");
        var x = $(obj).attr("x");
        var y = $(obj).attr("y");
        var w = $(obj).attr("w");
        var h = $(obj).attr("h");
        $("#textfamily").val(fontfamily);
        $("#textsize").val(fontsize);
        $("#ColorPickerBox").css("background-color", color);
        $("#textvalue").val(text);

        $("#item-x").val(x);
        $("#item-y").val(y);
        $("#item-w").val(w);
        $("#item-h").val(h);

        $(".attr-image").hide();
        $(".attr-text").show();
    } else if ($(obj).hasClass("img")) {
        var x = $(obj).attr("x");
        var y = $(obj).attr("y");
        var w = $(obj).attr("w");
        var h = $(obj).attr("h");
        var ow = $(obj).attr("ow");
        var oh = $(obj).attr("oh");
        $("#item-x").val(x);
        $("#item-y").val(y);
        $("#item-w").val(w);
        $("#item-h").val(h);
        $(".attr-text").hide();
        $(".attr-image").show();
        var percent = (parseFloat(w) / parseFloat(ow)) * 100;
        $(".slider").slider("value", percent);
    }
}

function SetFontColor() {
    $("#ColorPickerBox").css("background-color", currentColor);
    $.each(SelectedItems, function (n, obj) {
        $(obj).attr("rc", currentColor);
        $(obj).attr("cc", currentColorCMYK);
        Text2Image(obj);
    });
}
/////*删除所选*/
function DeleteElement() {
    $.each(SelectedItems, function (n, value) {
        $(value).remove();
    });
}
/////*
////层叠顺序
////*/
var SetLayer = function (deraction) {
    var objId = $(SelectedItems[0]).attr("id");
    var items = $("#l-page-" + nowPage + " .pageContent").find(".preimg");
    var temp;

    for (i = 0; i < items.length; i++) {
        for (j = i; j < items.length; j++) {
            if (parseInt($(items[i]).css("z-index")) > parseInt($(items[j]).css("z-index"))) {
                temp = $(items[i]);
                items[i] = $(items[j]);
                items[j] = temp;
            }
        }
    }

    var objindex = 0;
    for (i = 0; i < items.length; i++) {
        if ($(items[i]).attr("id") == objId)
            objindex = i;
    }

    if (deraction == "up") {
        if ($(items[objindex + 1]).length > 0) {
            var t = $("#" + objId).css("z-index");
            $("#" + objId).css("z-index", $(items[objindex + 1]).css("z-index"));
            $(items[objindex + 1]).css("z-index", t)
        }

    } else if (deraction == "down") {
        if ($(items[objindex - 1]).length > 0) {
            var t = $("#" + objId).css("z-index");
            $("#" + objId).css("z-index", $(items[objindex - 1]).css("z-index"));
            $(items[objindex - 1]).css("z-index", t)
        }
    }
}
/////*
////设置字体的对齐方向
////*/
var SetAlignLeft = function () {
    $.each(SelectedItems, function (n, value) {
        $(value).css("text-align", "left");
        $(value).attr("haligntype", "self");
        $(value).attr("halignvalue", "left");
    });
}
var SetAlignRight = function () {
    $.each(SelectedItems, function (n, value) {
        $(value).css("text-align", "right");
        $(value).attr("haligntype", "self");
        $(value).attr("halignvalue", "right");
    });
}
var SetAlignCenter = function () {
    $.each(SelectedItems, function (n, value) {
        $(value).css("text-align", "center");
        $(value).attr("haligntype", "self");
        $(value).attr("halignvalue", "center");
    });
}
/////*
////设定两个及以上各元素的对齐方式
////*/
var HoriLeft = function () {
    if (SelectedItems.length > 1) {
        var minLeft = 1000;
        $.each(SelectedItems, function (n, value) {
            var meLeft = parseInt($(value).css("left"));
            if (meLeft < minLeft)
                minLeft = meLeft;
        });
        $.each(SelectedItems, function (n, value) {
            $(value).css("left", minLeft).css("text-align", "left");
            $(value).attr("ht", "0");
            $(value).attr("hv", "0");
            $(value).attr("x", minLeft);
        });
    } else if (SelectedItems.length == 1) {
        ToPageLeft();
    }
}

var HoriRight = function () {
    if (SelectedItems.length > 1) {
        var maxRight = 0;
        $.each(SelectedItems, function (n, value) {
            var meLeft = parseInt($(value).css("left"));
            var meWidth = parseInt($(value).css("width"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var oWidth = 0;
            if ($(value).css("width").toUpperCase() != "AUTO")
                oWidth = meWidth;
            else
                oWidth = meOffsetWidth;
            if (meLeft + oWidth > maxRight)
                maxRight = meLeft + oWidth;
        });
        $.each(SelectedItems, function (n, value) {
            var meWidth = parseInt($(value).css("width"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var oWidth = 0;
            if ($(value).css("width") && $(value).css("width").toUpperCase() != "AUTO") {
                oWidth = meWidth;
            } else {
                oWidth = meOffsetWidth;
            }
            $(value).css("left", maxRight - oWidth).css("text-align", "right");
            $(value).attr("ht", "0");
            $(value).attr("hv", "2");
            $(value).attr("x", maxRight - oWidth);
        });
    } else if (SelectedItems.length == 1) {
        ToPageRight();
    }
}

var VertTop = function () {
    if (SelectedItems.length > 1) {
        var minTop = 1000;
        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            if (meTop < minTop)
                minTop = meTop;
        });
        $.each(SelectedItems, function (n, value) {
            $(value).css("top", minTop);
            $(value).attr("vt", "0");
            $(value).attr("vv", "1");
            $(value).attr("y", minTop);
        });
    } else if (SelectedItems.length == 1) {
        ToPageTop();
    }
}

var VertBottom = function () {
    if (SelectedItems.length > 1) {
        var maxBottom = 0;
        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var oHeight = 0;
            if ($(value).css("height") && $(value).css("height").toUpperCase() != "AUTO") {
                oHeight = parseInt($(value).css("height"));
            } else {
                oHeight = parseInt($(value).get(0).offsetHeight);
            }
            if (meTop + oHeight > maxBottom)
                maxBottom = meTop + oHeight;
        });
        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var oHeight = 0;
            if ($(value).css("height") && $(value).css("height").toUpperCase() != "AUTO") {
                oHeight = parseInt($(value).css("height"));
            } else {
                oHeight = parseInt($(value).get(0).offsetHeight);
            }
            $(value).css("top", maxBottom - oHeight);
            $(value).attr("vt", "0");
            $(value).attr("vv", "1");
            $(value).attr("y", maxBottom - oHeight);
        });
    } else if (SelectedItems.length == 1) {
        ToPageBottom();
    }
}

var HoriCenter = function () {
    if (SelectedItems.length > 1) {
        var minTop = 1000;
        var maxBottom = 0;

        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var meLeft = parseInt($(value).css("left"));
            var meWidth = parseInt($(value).css("width"));
            var meHeight = parseInt($(value).css("height"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var meOffsetHeight = parseInt($(value).get(0).offsetHeight);

            var oHeight = 0;
            if ($(value).css("height") && $(value).css("height").toUpperCase() != "AUTO")
                oHeight = meHeight;
            else
                oHeight = meOffsetHeight;
            if (meTop < minTop)
                minTop = meTop;
            if (meTop + oHeight > maxBottom)
                maxBottom = meTop + oHeight;
        });

        var centerValue = (maxBottom + minTop) / 2;
        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var meLeft = parseInt($(value).css("left"));
            var meWidth = parseInt($(value).css("width"));
            var meHeight = parseInt($(value).css("height"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var meOffsetHeight = parseInt($(value).get(0).offsetHeight);

            var oHeight = 0;
            if ($(value).css("height") && $(value).css("height").toUpperCase() != "AUTO")
                oHeight = meHeight;
            else
                oHeight = meOffsetHeight;
            $(value).css("top", centerValue - parseInt(oHeight / 2));
            $(value).attr("ht", "0");
            $(value).attr("hv", "1");
            $(value).attr("y", centerValue - parseInt(oHeight / 2));
        });
    } else if (SelectedItems.length == 1) {
        ToPageMiddle();
    }
}

var VertMiddle = function () {
    if (SelectedItems.length > 1) {
        var minLeft = 1000;
        var maxRight = 0;

        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var meLeft = parseInt($(value).css("left"));
            var meWidth = parseInt($(value).css("width"));
            var meHeight = parseInt($(value).css("height"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var meOffsetHeight = parseInt($(value).get(0).offsetHeight);

            if ($(value).css("width") && $(value).css("width").toUpperCase() != "AUTO") {
                oWidth = meWidth;
            } else {
                oWidth = meOffsetWidth;
            }

            if (meLeft < minLeft)
                minLeft = meLeft;
            if (meLeft + oWidth > maxRight)
                maxRight = meLeft + oWidth
        });

        var centerValue = (maxRight + minLeft) / 2;
        $.each(SelectedItems, function (n, value) {
            var meWidth = parseInt($(value).css("width"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var oWidth = 0;
            if ($(value).css("width") && $(value).css("width").toUpperCase() != "AUTO")
                oWidth = meWidth;
            else
                oWidth = meOffsetWidth;
            $(value).css("left", centerValue - parseInt(oWidth / 2));
            $(value).css("text-align", "center");
            $(value).attr("vt", "0");
            $(value).attr("vv", "1");
            $(value).attr("x", centerValue - parseInt(oWidth / 2));
        });
    } else if (SelectedItems.length == 1) {
        ToPageCenter();
    }
}
/////*
////设置3个及以上元素的分布方式
////*/
var HoriAverage = function () {
    var index = 0;
    var maxRight = 0;
    var minLeft = 1000;
    var addWidth = 0;
    var leftArr = $([]);
    if (SelectedItems.length > 2) {
        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var meLeft = parseInt($(value).css("left"));
            var meWidth = parseInt($(value).css("width"));
            var meHeight = parseInt($(value).css("height"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var meOffsetHeight = parseInt($(value).get(0).offsetHeight);

            var oWidth = 0;

            if ($(value).css("width") && $(value).css("width").toUpperCase() != "AUTO") {
                oWidth = meWidth;
            } else {
                oWidth = meOffsetWidth;
            }

            if (meLeft < minLeft)
                minLeft = meLeft;
            if (meLeft + oWidth > maxRight)
                maxRight = meLeft + oWidth;
            addWidth += oWidth;
            leftArr.push($(value));
            index++;
        });

        this.OrderByLeft(leftArr);
        var totalSpace = maxRight - minLeft - addWidth;
        if (totalSpace >= 0 && leftArr.length >= 2) {
            var perSpace = parseInt(totalSpace / (leftArr.length - 1));
            var currentLeft = parseInt($(leftArr[0]).css("left"));
            $.each(leftArr, function (n, value) {
                var meWidth = 0;
                if ($(value).css("width") && $(value).css("width").toUpperCase() != "AUTO") {
                    meWidth = parseInt($(value).css("width"));
                } else {
                    meWidth = parseInt($(value).get(0).offsetWidth);
                }
                $(value).css("left", currentLeft);
                $(value).attr("x", currentLeft);
                currentLeft += meWidth + perSpace;
            });
        }
    } else {
        alert("排列请至少选择3个对象");
    }
}
/*
竖直方向平均分布
*/
var VertAverage = function () {
    var index = 0;
    var maxBottom = 0;
    var minTop = 1000;
    var addHeight = 0;
    var topArr = [];
    if (SelectedItems.length > 2) {
        $.each(SelectedItems, function (n, value) {
            var meTop = parseInt($(value).css("top"));
            var meLeft = parseInt($(value).css("left"));
            var meWidth = parseInt($(value).css("width"));
            var meHeight = parseInt($(value).css("height"));
            var meOffsetWidth = parseInt($(value).get(0).offsetWidth);
            var meOffsetHeight = parseInt($(value).get(0).offsetHeight);
            var oHeight = 0;
            if ($(value).css("height") && $(value).css("height").toUpperCase() != "AUTO") {
                oHeight = meHeight;
            } else {
                oHeight = meOffsetHeight;
            }
            if (meTop < minTop)
                minTop = meTop;
            if (meTop + oHeight > maxBottom)
                maxBottom = meTop + oHeight;
            addHeight += oHeight;
            topArr[index] = $(value);
            index++;
        });

        this.OrderByTop(topArr);
        var totalSpace = maxBottom - minTop - addHeight;
        if (totalSpace >= 0 && topArr.length >= 2) {
            var perSpace = parseInt(totalSpace / (topArr.length - 1));
            var currentTop = parseInt($(topArr[0]).css("top"));
            $.each(topArr, function (n, value) {
                var meHeight = 0;
                if ($(value).css("height") && $(value).css("height").toUpperCase() != "AUTO") {
                    meHeight = parseInt($(value).css("height"));
                } else {
                    meHeight = parseInt($(value).get(0).offsetHeight);
                }
                $(value).css("top", currentTop);
                $(value).attr("y", currentTop);
                currentTop += meHeight + perSpace;
            });
        }
    } else {
        alert("排列请至少选择3个对象");
    }
}
//////对齐方式辅助处理
var OrderByLeft = function (leftArr) {
    for (var i = 0; i < leftArr.length - 1; i++) {
        for (var j = 0; j < leftArr.length - 1; j++) {
            var left1 = parseInt($(leftArr[j]).css("left"));
            var left2 = parseInt($(leftArr[j + 1]).css("left"));
            if (left1 > left2) {
                this.Swap(j, j + 1, leftArr);
            }
        }
    }
}
var OrderByTop = function (topArr) {
    for (var i = 0; i < topArr.length - 1; i++) {
        for (var j = 0; j < topArr.length - 1; j++) {
            var top1 = parseInt($(topArr[j]).css("top"));
            var top2 = parseInt($(topArr[j + 1]).css("top"));
            if (top1 > top2) {
                this.Swap(j, j + 1, topArr);
            }
        }
    }

}
var Swap = function (index1, index2, objArr) {
    var tempobj = objArr[index1];
    objArr[index1] = objArr[index2];
    objArr[index2] = tempobj;
}
/////*
////元素相对于页面的对齐方式
////*/
var ToPageLeft = function () {
    $.each(SelectedItems, function (n, value) {
        $(value).css("left", 0);
        $(value).attr("x", 0);
        $(value).css("text-align", "left");
        $(value).attr("haligntype", "page");
        $(value).attr("halignvalue", "left");
    });
}
var ToPageTop = function () {
    $.each(SelectedItems, function (n, value) {
        $(value).css("top", 0);
        $(value).attr("y", 0);
        $(value).attr("valigntype", "page");
        $(value).attr("valignvalue", "top");
    });
}
var ToPageRight = function () {
    var pageWidth = parseInt($(".pagec").css("width"));
    $.each(SelectedItems, function (n, value) {
        var meWidth = parseInt($(value).css("width"));
        $(value).css("left", pageWidth - meWidth);
        $(value).attr("x", pageWidth - meWidth);
        $(value).css("text-align", "right");
        $(value).attr("haligntype", "page");
        $(value).attr("halignvalue", "right");
    });
}
var ToPageBottom = function () {
    var pageHeight = parseInt($(".pagec").css("height"));
    $.each(SelectedItems, function (n, value) {
        var meHeight = parseInt($(value).css("height"));
        $(value).css("top", pageHeight - meHeight);
        $(value).attr("y", pageHeight - meHeight);
        $(value).attr("valigntype", "page");
        $(value).attr("valignvalue", "bottom");
    });
}
var ToPageCenter = function () {
    var pageWidth = parseInt($(".pagec").css("width"));

    $.each(SelectedItems, function (n, value) {
        var meWidth = parseInt($(value).css("width"));
        $(value).css("left", (pageWidth - meWidth) / 2);
        $(value).attr("x", (pageWidth - meWidth) / 2);
        $(value).css("text-align", "center");
        $(value).attr("haligntype", "page");
        $(value).attr("halignvalue", "center");
    });
}
var ToPageMiddle = function () {
    var pageHeight = parseInt($(".pagec").css("height"));

    $.each(SelectedItems, function (n, value) {
        var meHeight = parseInt($(value).css("height"));
        $(value).css("top", (pageHeight - meHeight) / 2);
        $(value).attr("y", (pageHeight - meHeight) / 2);
        $(value).attr("valigntype", "page");
        $(value).attr("valignvalue", "middle");
    });
}

function clearEventBubble(evt) {
    var Event = evt || event;
    if (Event.stopPropagation) evt.stopPropagation();
    else window.Event.cancelBubble = true;
    if (Event.preventDefault) evt.preventDefault();
    else window.Event.returnValue = false;
    return false;
}

/////*
////颜色选择器
////*/
var currentColor = "#8B0016";
var currentColorCMYK = "0-100-100-45";
var hexch = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F');

var table1 = ['0-100-100-45#8B0016', '0-100-100-25#B2001F', '0-100-100-15#C50023', '0-100-100-0#DF0029', '0-85-70-0#E54646', '0-65-50-0#EE7C6B', '0-45-30-0#F5A89A', '0-20-10-0#FCDAD5'];

var table2 = ['0-90-80-45#8E1E20', '0-90-80-25#B6292B', '0-90-80-15#C82E31', '0-90-80-0#E33539', '0-70-65-0#EB7153', '0-55-50-0#F19373', '0-40-35-0#F6B297', '0-20-20-0#FCD9C4'];

var table3 = ['0-60-100-45#945305', '0-60-100-25#BD6B09', '0-60-100-15#D0770B', '0-60-100-0#EC870E', '0-50-80-0#F09C42', '0-40-60-0#F5B16D', '0-25-40-0#FACE9C', '0-15-20-0#FDE2CA'];

var table4 = ['0-40-100-45#976D00', '0-40-100-25#C18C00', '0-40-100-15#D59B00', '0-40-100-0#F1AF00', '0-30-80-0#F3C246', '0-25-60-0#F9CC76', '0-15-40-0#FCE0A6', '0-10-20-0#FEEBD0'];

var table5 = ['0-0-100-45#9C9900', '0-0-100-25#C7C300', '0-0-100-15#DCD800', '0-0-100-0#F9F400', '0-0-80-0#FCF54C', '0-0-60-0#FEF889', '0-0-40-0#FFFAB3', '0-0-25-0#FFFBD1'];

var table6 = ['60-0-100-45#367517', '60-0-100-25#489620', '60-0-100-15#50A625', '60-0-100-0#5BBD2B', '50-0-80-0#83C75D', '30-0-60-0#AFD788', '25-0-40-0#C8E2B1', '12-0-20-0#E6F1D8'];

var table7 = ['100-0-90-45#006241', '100-0-90-25#007F54', '100-0-90-15#008C5E', '100-0-90-0#00A06B', '80-0-75-0#00AE72', '60-0-55-0#67BF7F', '45-0-35-0#98D0B9', '25-0-20-0#C9E4D6'];

var table8 = ['100-0-40-45#00676B', '100-0-40-25#008489', '100-0-40-15#009298', '100-0-40-0#00A6AD', '80-0-30-0#00B2BF', '60-0-25-0#6EC3C9', '45-0-20-0#99D1D3', '25-0-10-0#CAE5E8'];

var table9 = ['100-60-0-45#103667', '100-60-0-25#184785', '100-60-0-15#1B4F93', '100-60-0-0#205AA7', '85-50-0-0#426EB4', '65-40-0-0#7388C1', '50-25-0-0#94AAD6', '30-15-0-0#BFCAE6'];

var table10 = ['100-90-0-45#211551', '100-90-0-25#2D1E69', '100-90-0-15#322275', '100-90-0-0#3A2885', '85-80-0-0#511F90', '75-65-0-0#635BA2', '60-55-0-0#8273B0', '45-40-0-0#A095C4'];

var table11 = ['80-100-0-45#38044B', '80-100-0-25#490761', '80-100-0-15#52096C', '80-100-0-0#5D0C7B', '65-85-0-0#79378B', '55-65-0-0#8C63A4', '40-50-0-0#AA87B8', '25-30-0-0#C9B5D4'];

var table12 = ['40-100-0-45#64004B', '40-100-0-25#780062', '40-100-0-15#8F006D', '40-100-0-0#A2007C', '35-80-0-0#AF4A92', '25-60-0-0#C57CAC', '20-40-0-0#D2A6C7', '10-20-0-0#E8D3E3'];

var table13 = ['0-0-0-100#000000', '0-0-0-65#707070', '0-0-0-55#898989', '0-0-0-45#A0A0A0', '0-0-0-35#B7B7B7', '0-0-0-30#C2C2C2', '0-0-0-20#D7D7D7', '0-0-0-0#FFFFFF'];

function LoadColorPicker() {
    art.dialog({
        title: '颜色选择',
        content: document.getElementById("morecolor"),
        lock: true,
        ok: function () {
            SetFontColor();
        },
        okVal: "确定",
        cancelVal: '关闭',
        cancel: true

    });

    var color = $("#color");
    for (var i = 1; i <= 13; i++) {
        var obj = eval("table" + i);
        for (var j = 0; j < obj.length; j++) {
            var colorarr = obj[j];
            var strcmyk = colorarr.split("#")[0];
            var arrcmyk = strcmyk.split("-");
            if (arrcmyk.length != 4) {
                alert("error");
                break;
            }
            var c = arrcmyk[0];
            var m = arrcmyk[1];
            var y = arrcmyk[2];
            var k = arrcmyk[3];
            var rgb = "#" + colorarr.split("#")[1];

            var div = document.createElement("DIV");

            div.style.backgroundColor = rgb;
            div.style.float = "left";
            div.style.width = div.style.height = "20px";
            div.style.left = (i - 1) * 20 + "px";
            div.style.top = j * 20 + "px";
            div.style.position = "absolute";
            div.setAttribute("rgb", rgb);
            div.setAttribute("cmyk", strcmyk);

            div.onmousemove = SetColor;
            div.onmousedown = SetCurrentColor;
            color.append(div);
        }
    }
}

function SetColor() {
    var cmykvalue = $(this).attr("cmyk");
    var rgbvalue = $(this).attr("rgb");
    $("#rgbValue").val(rgbvalue);
    $("#showcolor").css("background", rgbvalue);
    var cmyk = cmykvalue.split('-');
    $("#cvalue").val(cmyk[0]);
    $("#mvalue").val(cmyk[1]);
    $("#yvalue").val(cmyk[2]);
    $("#kvalue").val(cmyk[3]);
}

function ShowCurrentColor() {
    $("#showcolor").css("background", currentColor);
    $("#rgbValue").val(currentColor);

    var cmyk = currentColorCMYK.split("-");
    $("#cvalue").val(cmyk[0]);
    $("#mvalue").val(cmyk[1]);
    $("#yvalue").val(cmyk[2]);
    $("#kvalue").val(cmyk[3]);
}

function SetCurrentColor() {
    currentColor = $(this).attr("rgb");
    currentColorCMYK = $(this).attr("cmyk");
    var cmyk = currentColorCMYK.split("-");
    $("#cvalue").val(cmyk[0]);
    $("#mvalue").val(cmyk[1]);
    $("#yvalue").val(cmyk[2]);
    $("#kvalue").val(cmyk[3]);
}

function cmykToRgb(c, m, y, k) {

    var rkfs = Math.round((1 - Math.min(1, (c / 100.0) * (1 - k / 100.0) + k / 100.0)) * 255);
    var gkfs = Math.round((1 - Math.min(1, (m / 100.0) * (1 - k / 100.0) + k / 100.0)) * 255);
    var bkfs = Math.round((1 - Math.min(1, (y / 100.0) * (1 - k / 100.0) + k / 100.0)) * 255);
    var value = "#" + ToHex(rkfs) + "" + ToHex(gkfs) + "" + ToHex(bkfs);

    return value;
}

function ToHex(n) {
    var h, l;

    n = Math.round(n);
    l = n % 16;
    h = Math.floor((n / 16)) % 16;
    return (hexch[h] + hexch[l]);
}

function verify(oldValue) {
    var value;
    var pattern = /^\d{1,3}$/;
    if (pattern.test(oldValue)) {
        var v = parseInt(oldValue);
        if (v > 100) {
            value = 100;
        } else {
            value = v;
        }
    }
    if (!value) value = 0;
    return value;
}

function SetCmykToRgb() {
    var c = verify(document.getElementById("cvalue").value);
    var m = verify(document.getElementById("mvalue").value);
    var y = verify(document.getElementById("yvalue").value);
    var k = verify(document.getElementById("kvalue").value);
    var rgbValue = cmykToRgb(c, m, y, k);
    document.getElementById("showcolor").style.backgroundColor = rgbValue;
    document.getElementById("rgbValue").value = rgbValue;
    currentColor = rgbValue;
    currentColorCMYK = c + "-" + m + "-" + y + "-" + k;
    window.status = currentColor + " " + currentColorCMYK;
}